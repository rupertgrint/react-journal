{"ast":null,"code":"var _jsxFileName = \"/Users/hyun/projects/react/react-journal/src/context/DarkModeContext.jsx\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useContext, useEffect, useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst DarkModeContext = /*#__PURE__*/createContext();\nexport function DarkModeProvider({\n  children\n}) {\n  _s();\n  const [darkMode, setDarkMode] = useState(false);\n  const toggleDarkMode = () => {\n    setDarkMode(!darkMode);\n    updateDarkMode(!darkMode);\n  };\n  useEffect(() => {\n    const isDark = localStorage.theme === 'dark' || !('theme' in localStorage) && window.matchMedia('(prefers-color-scheme: dark').matches;\n  });\n  return /*#__PURE__*/_jsxDEV(DarkModeContext.Provider, {\n    value: {\n      darkMode,\n      toggleDarkMode\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 5\n  }, this);\n}\n_s(DarkModeProvider, \"n2P3coCVngntCnyS/Nqj+dgR7+U=\");\n_c = DarkModeProvider;\nexport const useDarkMode = () => {\n  _s2();\n  return useContext(DarkModeContext);\n};\n_s2(useDarkMode, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\nfunction updateDarkMode(darkMode) {\n  if (darkMode) {\n    document.documentElement.classList.add('dark');\n  } else {\n    document.documentElement.classList.remove('dark');\n  }\n}\nvar _c;\n$RefreshReg$(_c, \"DarkModeProvider\");","map":{"version":3,"names":["React","createContext","useContext","useEffect","useState","jsxDEV","_jsxDEV","DarkModeContext","DarkModeProvider","children","_s","darkMode","setDarkMode","toggleDarkMode","updateDarkMode","isDark","localStorage","theme","window","matchMedia","matches","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","useDarkMode","_s2","document","documentElement","classList","add","remove","$RefreshReg$"],"sources":["/Users/hyun/projects/react/react-journal/src/context/DarkModeContext.jsx"],"sourcesContent":["import React, { createContext, useContext, useEffect, useState } from 'react';\n\nconst DarkModeContext = createContext();\n\nexport function DarkModeProvider({ children }) {\n  const [darkMode, setDarkMode] = useState(false);\n  const toggleDarkMode = () => {\n    setDarkMode(!darkMode);\n    updateDarkMode(!darkMode);\n  };\n\n  useEffect(() => {\n    const isDark =\n      localStorage.theme === 'dark' ||\n      (!('theme' in localStorage) &&\n        window.matchMedia('(prefers-color-scheme: dark').matches);\n  });\n\n  return (\n    <DarkModeContext.Provider value={{ darkMode, toggleDarkMode }}>\n      {children}\n    </DarkModeContext.Provider>\n  );\n}\n\nexport const useDarkMode = () => useContext(DarkModeContext);\n\nfunction updateDarkMode(darkMode) {\n  if (darkMode) {\n    document.documentElement.classList.add('dark');\n  } else {\n    document.documentElement.classList.remove('dark');\n  }\n}\n"],"mappings":";;;AAAA,OAAOA,KAAK,IAAIC,aAAa,EAAEC,UAAU,EAAEC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE9E,MAAMC,eAAe,gBAAGN,aAAa,CAAC,CAAC;AAEvC,OAAO,SAASO,gBAAgBA,CAAC;EAAEC;AAAS,CAAC,EAAE;EAAAC,EAAA;EAC7C,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGR,QAAQ,CAAC,KAAK,CAAC;EAC/C,MAAMS,cAAc,GAAGA,CAAA,KAAM;IAC3BD,WAAW,CAAC,CAACD,QAAQ,CAAC;IACtBG,cAAc,CAAC,CAACH,QAAQ,CAAC;EAC3B,CAAC;EAEDR,SAAS,CAAC,MAAM;IACd,MAAMY,MAAM,GACVC,YAAY,CAACC,KAAK,KAAK,MAAM,IAC5B,EAAE,OAAO,IAAID,YAAY,CAAC,IACzBE,MAAM,CAACC,UAAU,CAAC,6BAA6B,CAAC,CAACC,OAAQ;EAC/D,CAAC,CAAC;EAEF,oBACEd,OAAA,CAACC,eAAe,CAACc,QAAQ;IAACC,KAAK,EAAE;MAAEX,QAAQ;MAAEE;IAAe,CAAE;IAAAJ,QAAA,EAC3DA;EAAQ;IAAAc,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACe,CAAC;AAE/B;AAAChB,EAAA,CAnBeF,gBAAgB;AAAAmB,EAAA,GAAhBnB,gBAAgB;AAqBhC,OAAO,MAAMoB,WAAW,GAAGA,CAAA;EAAAC,GAAA;EAAA,OAAM3B,UAAU,CAACK,eAAe,CAAC;AAAA;AAACsB,GAAA,CAAhDD,WAAW;AAExB,SAASd,cAAcA,CAACH,QAAQ,EAAE;EAChC,IAAIA,QAAQ,EAAE;IACZmB,QAAQ,CAACC,eAAe,CAACC,SAAS,CAACC,GAAG,CAAC,MAAM,CAAC;EAChD,CAAC,MAAM;IACLH,QAAQ,CAACC,eAAe,CAACC,SAAS,CAACE,MAAM,CAAC,MAAM,CAAC;EACnD;AACF;AAAC,IAAAP,EAAA;AAAAQ,YAAA,CAAAR,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}